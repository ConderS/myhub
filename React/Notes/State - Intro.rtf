{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf810
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww33400\viewh21000\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0  
\b State:\

\b0 		A plain JavaScript object that is used to 
\i record 
\i0 and 
\i react
\i0  to user events\
\
	Each class-based component that we define has its own 
\b state object
\b0 \
	\
	Whenever a component\'92s state 
\i is changed
\i0 , the component 
\i immediately re-renders,
\i0 \
		and forces its
\b  
\i children
\i0\b0  
\i to re-render as well\

\i0 \
\
Before we ever use 
\b state 
\b0 inside of a component, we have to:\
 - Initialize the state object\
\
To Initialize state:\
\
	We set the property 
\i state
\i0  to a plain JavaScript object inside the class\'92s constructor method\
\
//NOTE: only class-based components have state. NOT FUNCTIONAL COMPONENTS\
\

\i \'97\'97\
\

\i0 In the SearchBar component\'92s case, it\'92s \'93render\'94 method would be re-run again\
\
\'97\'97search_ bar.js\'97\'97\'97\
\
\

\b class SearchBar extends Component \{
\b0 \
\
	//Initializing state in a class-based component\
	//NOTE: only class-based components have state. NOT FUNCTIONAL COMPONENTS\
\
	//Each instance of a class component has ITS OWN COPY of state\
\
	//The constructor is the only function called automatically whenever a new instance of the class is created\
\
	
\b constructor(props) \{
\b0 \
\
		//When we define a method already defined on the parent class, in this case 'Component'...we can call that parent method on the parent class, by calling "super"\
		//		Therefore, the 'constructor' of the parent class is called here, because we called "super" inside the constructor method (we also gave it the same input parameters\
		// YOU HAVE TO DO THIS - it'll throw an error and catch it for you if you don't\
\
		
\b super(props);
\b0 \
\
		//We created a new object 'term' and assigned it to 'this.state'\
		//	  This object will have properties that we want to record on the state\
		//		Here, we want to record the property 'term' (the search term) on 'state'\
		//	We want to update the state with the VALUE of the input, and change 'term' to reflect that \
		\
	
\b 	this.state = \{ term: '' \};\
	\}\
\
\
\
\
}