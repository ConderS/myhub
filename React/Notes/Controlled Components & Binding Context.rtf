{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf810
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww33400\viewh21000\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \

\b \ul Controlled field: 
\b0 \ulnone  A form element whose input value is set BY the STATE of our component, not the other way around\
\
\
\'97search-bar.js\'97\'97\
\
i
\b mport React, \{ Component \} from 'react';\
\
export default class SearchBar extends Component \{\
\
    constructor(props) \{\
        super(props);\
\
        this.state = \{ term: '' \};
\b0 \
\
        //Now 'this' will refer to the correct context\
\
        //RIGHT SIDE (RH): \
        //    'this' (the component) has a function called 'onInputChange'\
        //    Bind that function to the current context of 'this'\
        //LEFT SIDE (LH):\
        //    Replace the current 'this.onInputChange' function with the BOUND instance of 'this.onInputChange' from the RH\
       
\b  this.onInputChange = this.onInputChange.bind(this);\
    \}\
\
    onInputChange(event) \{\
        this.setState(\{\
            term: event.target.value\
        \});\
    \}\
    render() \{\
        return (\
            <form className="input-group">\
                <input \
                    placeholder="Get a five day forecast in your favorite cities"\
                    className="form-control"\
                    value=\{this.state.term\}\

\b0 \
                    //Whenever we use a callback function or handler, 'this' will refer to some mystery context if we don't use the ARROW FUNCTION syntax\
\
                    //Instead of doing:\
                    //    'onChange=\{() => onInputChange()' like last time, we're going to BIND it to the right context\
                   
\b  onChange=\{this.onInputChange\}\
                />\
                <span className="input-group-btn">\
                    <button type="submit" className="btn btn-secondary">\
                    Submit \
                    </button>\
                </span>\
            </form>\
            );\
    \}\
\}}