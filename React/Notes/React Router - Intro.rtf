{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf810
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww33400\viewh21000\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
\
What allows us to do SPA like in Angular routes.\
\
\'97 Stops the change in URL from initiating a request to the server and 
\b changes the components displayed on the screen
\b0  based on the components of the URL\
\
\'97\'97index.js\
\

\b import React from 'react';\
import ReactDOM from 'react-dom';\
import \{ Provider \} from 'react-redux';\
import \{ createStore, applyMiddleware \} from 'redux';\
\

\b0 //BrowserRouter interacts with the History package\
// Route is the react component that we can render inside any other react component that we put together inside our application
\b \
\ul import \{ BrowserRouter, Route \} from 'react-router-dom';\
\ulnone \
import App from './components/app';\
import reducers from './reducers';\
\
const createStoreWithMiddleware = applyMiddleware()(createStore);\
\
class Hello extends React.Component \{\
    render() \{ return <div>Hello!</div> \}\
\}\
\
class GoodBye extends React.Component \{\
    render() \{ return <div>GoodBye!</div> \}\
\}\
\
\
ReactDOM.render(\
  <Provider store=\{createStoreWithMiddleware(reducers)\}>\
    \ul <BrowserRouter>\
\
       
\b0  \{/* Route component has two properties - 'path' and 'component' \
\
            On the given 'path', show the corresponding 'component'.\
\
            Otherwise, there is no content showed on the screen.\
\
\
          "Route may have only one child element"\
              - This means we have to wrap the 'Route' with a div, I'm guessing that only ONE element can be within BrowserRouter. So 'div' acts as a single parent element.\
        */\}\

\b         <div>\
\
           
\b0  \{/* If we want to show a component that is always displayed across routes - we can just input it here (above or below, doesn't matter)\
             */\}\
\
            \{/* TestHeader1 */\}\
\

\b             <Route path="/intro" component=\{Hello\} />\
            <Route path="/goodbye" component=\{GoodBye\} />\
             \
         
\b0    \{/* TestHeader2 */\}\

\b         </div>\
    </BrowserRouter>\
\ulnone \
  </Provider>\
  , document.querySelector('.container'));\
}