{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf810
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww33400\viewh20520\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
Refactoring App component into a class-based component so that it can keep track of the list of videos.\
\
\'97\'97\'97index.js\'97\'97\'97\'97\
\

\b class App extends Component \{\
	constructor(props) \{\
		super(props);\

\b0 \
		//A property/variable named "videos" that will contain an array of videos (YTSearch returns an ARRAY OF OBJECTS)\
\
		
\b this.state = \{ videos: [] \};
\b0 \
\
		//REMEMBER: We have to first INITIALIZE the state before changing it, that's why we change the state afterwards in the statement here\
		//NOTE: YTSearch returns an ARRAY of OBJECTS - so we can just set the state to the returned response 'videos'\
\
		
\b YTSearch(\{ key: API_KEY, term: 'surfboards'\}, (videos) => \{\

\b0 \
				//When the property is "videos" and we're setting it to "videos", we can just leave a singular "videos" and it'll mean the same thing\
				// i.e. The bottom statement is equivalent to 'this.setState(\{ videos: videos \})'' \
\
			
\b 	 this.setState(\{ videos \})\
		\})\
	\}\
\
	render() \{\
\
		return (\
			<div>\
				<SearchBar />\
			</div>\
		);\
	\}\
\}}