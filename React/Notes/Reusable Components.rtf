{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf810
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww33400\viewh21000\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 \
\

\b0 \'97weather-list.js\'97\
\'85\

\b import SparkChart from '../components/chart';\
\
export class WeatherList extends Component \{\
\
renderWeather(cityData) \{\
\
        const id = cityData.city.id;\
\
        
\b0 //Each element of array is passed into the map function as the variable 'weather'\
        //We then access the temperature within each element of the array\
\

\b         const temps = cityData.list.map(weather => weather.main.temp);\
\
        return (\
\
            // Remember that the key should be placed in the parent-most html of the array element\
            <tr key=\{id\}>\
                <td>\{cityData.city.name\}</td>\
                <td>\
                    <SparkChart temps=\{temps\} color="orange" />\
                </td>\
            </tr>\
            );\
    \}\
\
\'85\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \'97chart.js\'97
\b0 \
\
//Only needs to be a functional component - not a class component\
//No need to manage state\
\

\b import React from 'react';\
import \{ Sparklines, SparklinesLine \} from 'react-sparklines';\
\
export default (props) => \{\
    return (\
        <div>\
            <Sparklines height=\{120\} width=\{180\} data=\{props.temps\}>\
                <SparklinesLine color=\{props.color\}/>  \
            </Sparklines>\
        </div>\
        );\
\}\
\
}