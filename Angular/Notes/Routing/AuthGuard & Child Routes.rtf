{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf810
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww33400\viewh20520\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
==auth-guard.service.ts===\
\

\b 	canActivate(route: ActivatedRouteSnapshot,\
		state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean \{\
\
			return this.authService.isAuthenticated()\
				.then(\
						(authenticated: boolean) => \{\
							if (authenticated) \{\
								return true;\
							\} else \{\
								this.router.navigate(['/']);\
							\}\
						\}\
					);\
	\}\

\b0 \
//If used in route array in 'canActivateChild', then ONLY the child routes are protected\
	
\b \ul canActivateChild(route: ActivatedRouteSnapshot, \
			state: RouterStateSnapshot): Observable<boolean> | Promise <boolean> | boolean \{\
		return this.canActivate(route, state);\
	\}\

\b0 \}\
\
\
\
\ulnone ===app-routing.module.ts==\
\

\b \{ \
   	path: 'servers', \

\b0    	//canActivate: [AuthGuard], \
\
   	//Now ONLY the child routes are protected
\b \
   	canActivateChild: [AuthGuard],\
   	component: ServersComponent, \
   	children: [\
    \{ path: ':id', component: ServerComponent \},\
    \{ path: ':id/edit', component: EditServerComponent \}\
   ]\},}