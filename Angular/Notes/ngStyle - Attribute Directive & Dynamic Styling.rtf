{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf810
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww33400\viewh21000\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
Unlike structural directives, attribute directives don\'92t add or remove elements.\
They only CHANGE the element they were placed on. \
\
\
\'97\'97server.component.html\'97\
\
<!-- ngStyle: In [] because it needs some configuration in order to do something. Indicates we need to bind on some property on this directive.\
\
We are binding to the property of the directive. (?)\
	\
Expects a Javascript object.\
\
We define this in key, value pairs:\
	\
		Key = CSS style name\
		Value = value of CSS style\
\
NOTE: We can refer to the style name through '' (SINGLE quotation marks) or camel case\
		i.e. 'background-color' === backgroundColor\
\
-->\
\
\

\b <p [ngStyle]= "\{backgroundColor: getColor()\}">\{\{ 'Server' \}\} with ID \{\{ serverID \}\} is \{\{ getServerStatus() \}\}</p>\
\
\

\b0 \'97\'97server.component.ts\'97\'97\
\

\b export class ServerComponent \{\
\'85.\
\
	getColor() \{\
		return this.serverStatus === 'online' ? 'green' : 'red';\
	\}\
\
\}}