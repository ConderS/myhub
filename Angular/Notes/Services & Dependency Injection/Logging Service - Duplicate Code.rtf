{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf810
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww33400\viewh20520\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
\
\'97logging.service.ts\'97\'97\
\
\
// A service is a normal TypeScript class \
\

\b \ul export class LoggingService \{
\b0 \ulnone \
\
	//Now we simply use this service anywhere that it appears in our app\
\

\b \ul 	logStatusChange(status: string) \{\
		console.log('A server status changed, new status: ' + status);\
	\}\
\}\ulnone \
\
\
\

\b0 \'97\'97new-account.component.ts\'97\'97\
\

\b import \{ Component, EventEmitter, Output \} from '@angular/core';
\b0 \
\
//Importing a service\
\

\b \ul import \{ LoggingService \} from '../logging.service';\ulnone \
\
@Component(\{\
  selector: 'app-new-account',\
  templateUrl: './new-account.component.html',\
  styleUrls: ['./new-account.component.css'],\

\b0 \
  //sets up Angular so that it can provide the class 'LoggingService' when we require it in the class definition of this component\
\
\ul  
\b  providers: [LoggingService]\
\ulnone \})\
export class NewAccountComponent \{\
  @Output() accountAdded = new EventEmitter<\{name: string, status: string\}>();
\b0 \
\
  //HOW TO ACTUALLY INSTANTIATE A SERVICE CLASS IN Angular\
  //   1. Define it in the constructor (the method below is shorthand)\
  //  \
  //   2. You MUST set the type to the service class that you are trying to inject/import (LoggingService)\
  //\
  //   3. Include another property in the @Component decorator called 'providers' that takes in an Array. Specify the service that you are importing in it\
  //\
  //   4. Use it anywhere in the class as if you instantiated it like the other example from before (the wrong way)\
  //      i.e. this.loggingService.logStatusChange(accountStatus)\
  \

\b   \ul constructor(private loggingService: LoggingService) \{\
\
  \}\
\ulnone \
  onCreateAccount(accountName: string, accountStatus: string) \{\
    this.accountAdded.emit(\{\
      name: accountName,\
      status: accountStatus\
    \});\

\b0 \
    //console.log('A server status changed, new status: ' + accountStatus);\
\
    \ul // This is NOT how you use the service in Angular.\
    // DO NOT INSTANTIATE IT ON YOUR OWN\
\
    // const service = new LoggingService();\
    // service.logStatusChange(accountStatus); \ulnone \
\
  \ul  
\b  this.loggingService.logStatusChange(accountStatus);\
\ulnone   \}\
\}\
\
\

\b0 \'97\'97account.component.ts\'97\
\

\b import \{ Component, EventEmitter, Input, Output \} from '@angular/core';\
\
\ul import \{ LoggingService \} from '../logging.service';\
\
\ulnone @Component(\{\
  selector: 'app-account',\
  templateUrl: './account.component.html',\
  styleUrls: ['./account.component.css'],\
 \ul  providers: [LoggingService]\ulnone \
\})\
export class AccountComponent \{\
  @Input() account: \{name: string, status: string\};\
  @Input() id: number;\
  @Output() statusChanged = new EventEmitter<\{id: number, newStatus: string\}>();\
\
\ul   constructor(private loggingService: LoggingService) \{\
\
  \}\ulnone \
\
  onSetTo(status: string) \{\
    this.statusChanged.emit(\{id: this.id, newStatus: status\});\
    \
\
   \ul  this.loggingService.logStatusChange(status);\
\ulnone   \}\
\}\
}