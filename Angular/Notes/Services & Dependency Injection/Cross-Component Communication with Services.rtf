{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf810
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww33400\viewh20520\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
\'97accounts.service.ts\'97\'97\
\

\b ...\

\b0 \

\b @Injectable()\
\
export class AccountsService \{\
	  accounts = [\
    \{\
      name: 'Master Account',\
      status: 'active'\
    \},\
    \{\
      name: 'Testaccount',\
      status: 'inactive'\
    \},\
    \{\
      name: 'Hidden Account',\
      status: 'unknown'\
    \}\
  ];\
\

\b0   //Event for Cross-Component communication\

\b \ul   statusUpdated = new EventEmitter<string>(); \ulnone \
\
	\'85..\
\
\

\b0 \'97account.component.ts\'97\

\b \
  onSetTo(status: string) \{    \
\
    this.accountsService.updateStatus(this.id, status);\
\

\b0     //Cross-Component Communication\
    //Emitting a status via service to communicate with an adjacent component
\b \
\
\ul     this.accountsService.statusUpdated.emit(status);\ulnone \
\
  \}\
\
\
\

\b0 \'97\'97new-account.component.ts\'97\'97\

\b \
\
  constructor(private loggingService: LoggingService,\
    private accountsService: AccountsService) \{\
\

\b0     //Cross-Component communication\
    //Using subscribe to LISTEN for the event emitted\

\b \
\ul     this.accountsService.statusUpdated.subscribe(\
      (status: string) => alert('New Status' + status)\
      );\
\ulnone \
  \}}