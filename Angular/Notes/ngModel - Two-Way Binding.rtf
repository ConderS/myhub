{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf810
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww33400\viewh20520\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 <!-- Two-way binding combines property and event binding \
\
			In order to use 'ngModel' you must import the 'FormsModule' from @angular/forms. You need to add it to the imports[] array in the AppModule (this should be there by default in a CLI project)\
\
			Important: For Two-Way-Binding to work, you need to enable the ngModel  directive. This is done by adding the FormsModule  to the imports[]  array in the AppModule.\
\
		You then also need to add the import from @angular/forms  in the app.module.ts file:\
\
		import \{ FormsModule \} from '@angular/forms';\
\

\i NOTE: ngModel is SPECIFICALLY for HTML text input/forms
\i0 \
\
			This will now trigger on the 'input' event and update the serverName automatically\
\
			It will ALSO update the value of the input if we change the serverName somewhere else	 \
\
			ASA, binds in both directions and reacts to changes to the variable/property it's binding with\
\
			IMPORTANT: IT'S NOT CALLING THE 'updateServerName' FUNCTION ANYMORE\
			It links to the TypeScript variable 'serverName' DIRECTLY\
			-->\
\

\b <input type="text" \
			class = "form-control"\
			[(ngModel)] = "serverName">}