{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf810
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww33400\viewh21000\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Note: different directives will take in different values as inputs \
\
\
\'97server.component.html\'97\'97\
\
<!-- ngClass: Allows us to dynamically add or remove CSS classes\
	Also takes in a JavaScript object, but note that this is different depending on the directive\
\
	Also defined in key-value pairs\
\
		Key:	CSS Class names\
		Value: Expression that says whether the class should be attached or not\
\
		You can of course outsource the value part of the pair if it is evaluated more extensiively than a single expression\
\
		(We've put in code so that elements with 'online' class will have white text)\
 -->\
\

\b <p [ngStyle]= "\{backgroundColor: getColor()\}"\
[ngClass]="\{online: serverStatus === 'online'\}">\
\{\{ 'Server' \}\} with ID \{\{ serverID \}\} is \{\{ getServerStatus() \}\}\
</p>\
\
\

\b0 \'97\'97server.component.ts\'97\'97\
\

\b @Component(\{\
\
	\'85.\
\
styles: [`\
	    .online \{\
	         color: white;\
	    \}\
 	`]\
\
\})}