{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf810
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww33400\viewh19500\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Sending info from 
\i Parent
\i0  to 
\i child
\i0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\
\'97\'97app.component.ts\'97\'97\
\

\b export class AppComponent \{\

\b0 \
  //Manually feeding a javascript object into the array with these properties\
\

\b   serverElements = [\{type: 'server', name: 'Testserver', content: 'Just a test!'\}];\
\
	\'85\
\
\

\b0 \'97\'97app.component.html\'97\'97\
\
<!-- NOTE: the property being binded is the NAME of the actual variable that we have defined in 'server-element.component.ts'\
\
      i.e. server-element defines 'element' as a property in its class definition.\
\
      BUT - BY DEFAULT - All properties of Components are ONLY accessible through their OWN components. Not through external files\
\
      You need to add a decorator in 'server-element':\
           @Input\
\
      See the respective TypeScript file for more info.\
   -->\
\
 
\b    <app-server-element *ngFor="let serverElement of serverElements"\
    [element]="serverElement"></app-server-element>\
  </div>\
\
\

\b0 \'97\'97\'97server-element.component.ts\'97\'97\'97\
\

\b export class ServerElementComponent implements OnInit \{
\b0 \
\
	//A type with \{\} is a Javascript object \
	// @Input() is a decorator that allows 'element' to be accessed by other components\
\
	
\b @Input() element: \{type: string, name: string, content: string\};}