{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf810
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww33400\viewh21000\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
\'97\'97cockpit.component.html\'97\'97\'97\
\
\
 <!--  <input type="text" class="form-control" [(ngModel)]="newServerName"> -->\
\
     <!-- ==Local Reference==\
\
     1. A local reference can be placed on ANY HTML element.\
     Name it by starting it with #\
\
     2.  #serverNameInput will hold a reference to the WHOLE HTML element, including its properties.\
\
    3. You can use them ANYWHERE in your template.\
      BUT ONLY in your template. \
      NOT IN YOUR TYPESCRIPT CODE\
\
    4. The local reference will be the whole HTML element and its properties AT THAT MOMENT\
\
      -->\
\
     
\b \ul  <\ulnone input \
      type="text"\
       class="form-control"\ul  \
\ulnone      \ul   #serverNameInput>\ulnone \
\
      <label>Server Content</label>\
      <input type="text" class="form-control" [(ngModel)]="newServerContent">\
      <br>\

\b0 \
      <!-- Local Reference\
\
        Now we pass it into this function\
\
       -->\
     
\b  <button\
        class="btn btn-primary"\
        (click)=\ul "onAddServer(serverNameInput)"\ulnone >Add Server</button>\
      <button\
        class="btn btn-primary"\
        (click)=\ul "onAddBlueprint(serverNameInput)"\ulnone >Add Server Blueprint</button>\
\
\
\

\b0 \'97\'97\'97cockpit.component.ts\'97\'97\'97\
\
// Local Reference\
//\
// Now we can use the information on the local reference passed in and use the element's properties to get its data\
\

\b   onAddServer(\ul srvNameInput: HTMLInputElement)\ulnone  \{\
\
    this.serverCreated.emit(\{\
      \ul serverName: srvNameInput.value,\ulnone  \
      serverContent: this.newServerContent  \
    \});\
  \}\
\
  onAddBlueprint(\ul srvNameInput: HTMLInputElement)\ulnone  \{\
    this.bpCreated.emit(\{\
     \ul  serverName: srvNameInput.value,\ulnone  \
      serverContent: this.newServerContent  \
    \});\
  \}
\b0 \
}